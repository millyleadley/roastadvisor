/* tslint:disable */
/* eslint-disable */
/**
 * Roast Advisor API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainReview
 */
export interface DomainReview {
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    archivedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    commentAddOns?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    commentMeat?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    commentPotatoes?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    commentPrice?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    commentSize?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    commentVeg?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainReview
     */
    ratingAddOns?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainReview
     */
    ratingMeat?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainReview
     */
    ratingPotatoes?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainReview
     */
    ratingPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainReview
     */
    ratingSize?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainReview
     */
    ratingVeg?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    restaurantID?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    updatedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainReview
     */
    userID?: string;
}

/**
 * Check if a given object implements the DomainReview interface.
 */
export function instanceOfDomainReview(value: object): value is DomainReview {
    return true;
}

export function DomainReviewFromJSON(json: any): DomainReview {
    return DomainReviewFromJSONTyped(json, false);
}

export function DomainReviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainReview {
    if (json == null) {
        return json;
    }
    return {
        
        'archivedAt': json['archivedAt'] == null ? undefined : json['archivedAt'],
        'commentAddOns': json['commentAddOns'] == null ? undefined : json['commentAddOns'],
        'commentMeat': json['commentMeat'] == null ? undefined : json['commentMeat'],
        'commentPotatoes': json['commentPotatoes'] == null ? undefined : json['commentPotatoes'],
        'commentPrice': json['commentPrice'] == null ? undefined : json['commentPrice'],
        'commentSize': json['commentSize'] == null ? undefined : json['commentSize'],
        'commentVeg': json['commentVeg'] == null ? undefined : json['commentVeg'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'id': json['id'] == null ? undefined : json['id'],
        'ratingAddOns': json['ratingAddOns'] == null ? undefined : json['ratingAddOns'],
        'ratingMeat': json['ratingMeat'] == null ? undefined : json['ratingMeat'],
        'ratingPotatoes': json['ratingPotatoes'] == null ? undefined : json['ratingPotatoes'],
        'ratingPrice': json['ratingPrice'] == null ? undefined : json['ratingPrice'],
        'ratingSize': json['ratingSize'] == null ? undefined : json['ratingSize'],
        'ratingVeg': json['ratingVeg'] == null ? undefined : json['ratingVeg'],
        'restaurantID': json['restaurantID'] == null ? undefined : json['restaurantID'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'userID': json['userID'] == null ? undefined : json['userID'],
    };
}

export function DomainReviewToJSON(value?: DomainReview | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'archivedAt': value['archivedAt'],
        'commentAddOns': value['commentAddOns'],
        'commentMeat': value['commentMeat'],
        'commentPotatoes': value['commentPotatoes'],
        'commentPrice': value['commentPrice'],
        'commentSize': value['commentSize'],
        'commentVeg': value['commentVeg'],
        'createdAt': value['createdAt'],
        'id': value['id'],
        'ratingAddOns': value['ratingAddOns'],
        'ratingMeat': value['ratingMeat'],
        'ratingPotatoes': value['ratingPotatoes'],
        'ratingPrice': value['ratingPrice'],
        'ratingSize': value['ratingSize'],
        'ratingVeg': value['ratingVeg'],
        'restaurantID': value['restaurantID'],
        'updatedAt': value['updatedAt'],
        'userID': value['userID'],
    };
}

